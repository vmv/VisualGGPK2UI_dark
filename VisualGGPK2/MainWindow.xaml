<ui:FluentWindow
    x:Class="VisualGGPK2.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:avalonedit="http://icsharpcode.net/sharpdevelop/avalonedit"
    xmlns:controls="clr-namespace:Wpf.Ui.Controls;assembly=Wpf.Ui"
    xmlns:ic="clr-namespace:FluentIcons.WPF;assembly=FluentIcons.WPF"
    xmlns:search="http://icsharpcode.net/sharpdevelop/avalonedit"
    xmlns:system="clr-namespace:System;assembly=System.Runtime"
    xmlns:ui="http://schemas.lepo.co/wpfui/2022/xaml"
    Title="VisualGGPK2"
    MinWidth="1300"
    MinHeight="800"
    AllowDrop="True"
    Background="{x:Null}"
    BorderThickness="0"
    DragEnter="OnDragEnter"
    Drop="OnDragDrop"
    FontFamily="Verdana"
    Foreground="{x:Null}"
    Loaded="OnLoaded"
    ResizeMode="CanResize"
    Style="{DynamicResource FluentWindowStyle}"
    WindowStartupLocation="CenterScreen"
    WindowStyle="None">

    <ui:FluentWindow.Resources>
        <ResourceDictionary>

            <!--  Search Box  -->
            <Thickness x:Key="TextBoxBorderThemeThickness">1,1,1,0</Thickness>
            <Thickness x:Key="TextBoxAccentBorderThemeThickness">0,0,0,1</Thickness>
            <Thickness x:Key="TextBoxLeftIconMargin">10,0,0,0</Thickness>
            <Thickness x:Key="TextBoxRightIconMargin">0,0,10,0</Thickness>
            <Thickness x:Key="TextBoxClearButtonMargin">0,0,4,0</Thickness>
            <Thickness x:Key="TextBoxClearButtonPadding">0,0,0,0</Thickness>
            <system:Double x:Key="TextBoxClearButtonHeight">24</system:Double>

            <ControlTemplate x:Key="DefaultUiTextBoxControlTemplate" TargetType="{x:Type controls:TextBox}">
                <Grid HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}">
                    <Border
                        x:Name="ContentBorder"
                        MinWidth="{TemplateBinding MinWidth}"
                        MinHeight="{TemplateBinding MinHeight}"
                        Padding="0"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Stretch"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="{TemplateBinding Border.CornerRadius}">
                        <Grid HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>

                            <ContentPresenter
                                x:Name="ControlIconLeft"
                                Grid.Column="0"
                                Margin="{StaticResource TextBoxLeftIconMargin}"
                                VerticalAlignment="Center"
                                Content="{TemplateBinding Icon}"
                                Focusable="False"
                                TextElement.FontSize="{TemplateBinding FontSize}"
                                TextElement.Foreground="{TemplateBinding Foreground}"
                                Visibility="Visible" />

                            <Grid Grid.Column="1" Margin="{TemplateBinding Padding}">
                                <ScrollViewer
                                    x:Name="PART_ContentHost"
                                    VerticalAlignment="Center"
                                    CanContentScroll="{TemplateBinding ScrollViewer.CanContentScroll}"
                                    HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                                    IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}"
                                    IsTabStop="{TemplateBinding ScrollViewer.IsTabStop}"
                                    Style="{StaticResource DefaultTextBoxScrollViewerStyle}"
                                    TextElement.Foreground="{TemplateBinding Foreground}"
                                    VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}" />
                                <TextBlock
                                    x:Name="PlaceholderTextBox"
                                    Margin="0"
                                    Padding="1,0"
                                    VerticalAlignment="Center"
                                    Text="{TemplateBinding PlaceholderText}">
                                    <TextBlock.Foreground>
                                        <SolidColorBrush Color="{DynamicResource TextPlaceholderColor}" />
                                    </TextBlock.Foreground>
                                </TextBlock>
                            </Grid>

                            <!--  Buttons and Icons have no padding from the main element to allow absolute positions if height is larger than the text entry zone  -->
                            <controls:Button
                                x:Name="ClearButton"
                                Grid.Column="2"
                                MinWidth="{StaticResource TextBoxClearButtonHeight}"
                                MinHeight="{StaticResource TextBoxClearButtonHeight}"
                                Margin="{StaticResource TextBoxClearButtonMargin}"
                                Padding="{StaticResource TextBoxClearButtonPadding}"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                HorizontalContentAlignment="Center"
                                VerticalContentAlignment="Center"
                                Appearance="Secondary"
                                Background="Transparent"
                                BorderBrush="Transparent"
                                Command="{Binding Path=TemplateButtonCommand, RelativeSource={RelativeSource TemplatedParent}}"
                                Cursor="Arrow">
                                <controls:Button.Foreground>
                                    <SolidColorBrush Color="{DynamicResource TextFillColorTertiary}" />
                                </controls:Button.Foreground>
                                <controls:Button.Icon>
                                    <controls:SymbolIcon FontSize="{TemplateBinding FontSize}" Symbol="Dismiss24" />
                                </controls:Button.Icon>
                            </controls:Button>

                            <ContentPresenter
                                x:Name="ControlIconRight"
                                Grid.Column="3"
                                Margin="{StaticResource TextBoxRightIconMargin}"
                                VerticalAlignment="Center"
                                Content="{TemplateBinding Icon}"
                                TextElement.FontSize="{TemplateBinding FontSize}"
                                TextElement.Foreground="{TemplateBinding Foreground}" />
                        </Grid>
                    </Border>
                    <!--  The Accent Border is a separate element so that changes to the border thickness do not affect the position of the element  -->
                    <Border
                        x:Name="AccentBorder"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Stretch"
                        BorderThickness="{StaticResource TextBoxAccentBorderThemeThickness}"
                        CornerRadius="{TemplateBinding Border.CornerRadius}">
                        <Border.BorderBrush>
                            <SolidColorBrush Color="Black" />
                        </Border.BorderBrush>
                    </Border>
                </Grid>
                <ControlTemplate.Triggers>
                    <Trigger Property="PlaceholderEnabled" Value="False">
                        <Setter TargetName="PlaceholderTextBox" Property="Visibility" Value="Collapsed" />
                    </Trigger>
                    <Trigger Property="ShowClearButton" Value="False">
                        <Setter TargetName="ClearButton" Property="Visibility" Value="Collapsed" />
                        <Setter TargetName="ClearButton" Property="Margin" Value="0" />
                    </Trigger>
                    <Trigger Property="ClearButtonEnabled" Value="False">
                        <Setter TargetName="ClearButton" Property="Visibility" Value="Collapsed" />
                        <Setter TargetName="ClearButton" Property="Margin" Value="20" />
                    </Trigger>
                    <Trigger Property="IconPlacement" Value="Right">
                        <Setter TargetName="ControlIconRight" Property="Visibility" Value="Collapsed" />
                        <Setter TargetName="ControlIconRight" Property="Margin" Value="0,0,0,0" />
                    </Trigger>
                    <Trigger Property="IconPlacement" Value="Right">
                        <Setter TargetName="ControlIconLeft" Property="Visibility" Value="Collapsed" />
                        <Setter TargetName="ControlIconLeft" Property="Margin" Value="0" />
                    </Trigger>
                    <Trigger Property="Icon" Value="{x:Null}">
                        <Setter TargetName="ControlIconRight" Property="Visibility" Value="Collapsed" />
                        <Setter TargetName="ControlIconRight" Property="Margin" Value="0" />
                        <Setter TargetName="ControlIconLeft" Property="Visibility" Value="Collapsed" />
                        <Setter TargetName="ControlIconLeft" Property="Margin" Value="0" />
                    </Trigger>
                    <Trigger Property="IsFocused" Value="True">
                        <Setter TargetName="AccentBorder" Property="BorderThickness" Value="1" />
                        <Setter TargetName="AccentBorder" Property="BorderBrush">
                            <Setter.Value>
                                <SolidColorBrush Color="Black" />
                            </Setter.Value>
                        </Setter>
                        <Setter TargetName="ContentBorder" Property="Background">
                            <Setter.Value>
                                <SolidColorBrush Color="{DynamicResource ControlFillColorInputActive}" />
                            </Setter.Value>
                        </Setter>
                    </Trigger>
                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="IsEnabled" Value="True" />
                            <Condition Property="IsMouseOver" Value="True" />
                            <Condition Property="IsFocused" Value="False" />
                        </MultiTrigger.Conditions>
                        <Setter TargetName="ContentBorder" Property="Background">
                            <Setter.Value>
                                <SolidColorBrush Color="{DynamicResource ControlFillColorSecondary}" />
                            </Setter.Value>
                        </Setter>
                    </MultiTrigger>
                    <Trigger Property="IsReadOnly" Value="True">
                        <Setter TargetName="ClearButton" Property="Visibility" Value="Collapsed" />
                        <Setter TargetName="ClearButton" Property="Margin" Value="0" />
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="True">
                        <Setter Property="Cursor" Value="IBeam" />
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter TargetName="ContentBorder" Property="Background" Value="{DynamicResource ControlFillColorDisabledBrush}" />
                        <Setter TargetName="ContentBorder" Property="BorderBrush" Value="{DynamicResource ControlStrokeColorDefaultBrush}" />
                        <Setter TargetName="AccentBorder" Property="BorderBrush" Value="{DynamicResource ControlStrokeColorDefaultBrush}" />
                        <Setter TargetName="ControlIconLeft" Property="TextElement.Foreground" Value="{DynamicResource TextFillColorDisabledBrush}" />
                        <Setter TargetName="ControlIconRight" Property="TextElement.Foreground" Value="{DynamicResource TextFillColorDisabledBrush}" />
                        <Setter TargetName="PlaceholderTextBox" Property="Foreground" Value="{DynamicResource TextFillColorDisabledBrush}" />
                        <Setter Property="Foreground" Value="{DynamicResource TextFillColorDisabledBrush}" />
                        <Setter Property="ClearButtonEnabled" Value="False" />
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
            <ControlTemplate x:Key="DefaultUiTextBoxTextSelectionEnabledControlTemplate" TargetType="{x:Type controls:TextBox}">
                <Grid HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}">
                    <Border
                        x:Name="ContentBorder"
                        MinWidth="{TemplateBinding MinWidth}"
                        MinHeight="{TemplateBinding MinHeight}"
                        Padding="0"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Stretch"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="{TemplateBinding Border.CornerRadius}"
                        Focusable="False">
                        <Grid HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <Grid Margin="{TemplateBinding Padding}">
                                <ScrollViewer
                                    x:Name="PART_ContentHost"
                                    VerticalAlignment="Center"
                                    CanContentScroll="{TemplateBinding ScrollViewer.CanContentScroll}"
                                    HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                                    IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}"
                                    IsTabStop="{TemplateBinding ScrollViewer.IsTabStop}"
                                    Style="{StaticResource DefaultTextBoxScrollViewerStyle}"
                                    TextElement.Foreground="{TemplateBinding Foreground}"
                                    VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}" />
                            </Grid>
                        </Grid>
                    </Border>
                </Grid>
            </ControlTemplate>

            <Style x:Key="UiTextBoxStyle" TargetType="{x:Type controls:TextBox}">
                <!--  Universal WPF UI focus  -->
                <Setter Property="FocusVisualStyle" Value="{DynamicResource DefaultControlFocusVisualStyle}" />
                <!--  Universal WPF UI focus  -->
                <!--  Universal WPF UI ContextMenu  -->
                <Setter Property="ContextMenu" Value="{DynamicResource DefaultControlContextMenu}" />
                <!--  Universal WPF UI ContextMenu  -->
                <Setter Property="Foreground">
                    <Setter.Value>
                        <SolidColorBrush Color="{DynamicResource TextFillColorPrimary}" />
                    </Setter.Value>
                </Setter>
                <Setter Property="CaretBrush">
                    <Setter.Value>
                        <SolidColorBrush Color="{DynamicResource TextFillColorPrimary}" />
                    </Setter.Value>
                </Setter>
                <Setter Property="Background">
                    <Setter.Value>
                        <SolidColorBrush Color="{DynamicResource ControlFillColorDefault}" />
                    </Setter.Value>
                </Setter>
                <Setter Property="BorderBrush" Value="{DynamicResource ControlElevationBorderBrush}" />
                <Setter Property="BorderThickness" Value="{StaticResource TextBoxBorderThemeThickness}" />
                <Setter Property="FontSize" Value="{DynamicResource ControlContentThemeFontSize}" />
                <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
                <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden" />
                <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Hidden" />
                <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False" />
                <Setter Property="HorizontalAlignment" Value="Stretch" />
                <Setter Property="VerticalAlignment" Value="Stretch" />
                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                <Setter Property="VerticalContentAlignment" Value="Top" />
                <Setter Property="MinHeight" Value="{DynamicResource TextControlThemeMinHeight}" />
                <Setter Property="MinWidth" Value="{DynamicResource TextControlThemeMinWidth}" />
                <Setter Property="Padding" Value="{DynamicResource TextControlThemePadding}" />
                <Setter Property="Border.CornerRadius" Value="{DynamicResource ControlCornerRadius}" />
                <Setter Property="ClearButtonEnabled" Value="True" />
                <Setter Property="IconPlacement" Value="Left" />
                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Setter Property="OverridesDefaultStyle" Value="True" />
                <Style.Triggers>
                    <Trigger Property="IsTextSelectionEnabled" Value="False">
                        <Setter Property="Template" Value="{StaticResource DefaultUiTextBoxControlTemplate}" />
                    </Trigger>
                    <Trigger Property="IsTextSelectionEnabled" Value="True">
                        <Setter Property="IsReadOnly" Value="True" />
                        <Setter Property="Background" Value="Transparent" />
                        <Setter Property="Padding" Value="0" />
                        <Setter Property="BorderBrush" Value="Transparent" />
                        <Setter Property="BorderThickness" Value="0" />
                        <Setter Property="Template" Value="{StaticResource DefaultUiTextBoxTextSelectionEnabledControlTemplate}" />
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style BasedOn="{StaticResource DefaultUiTextBoxStyle}" TargetType="{x:Type controls:TextBox}" />

            <!--  end Search Box  -->

            <!--  Avalon Edit  -->
            <Style TargetType="{x:Type avalonedit:LineNumberMargin}">
                <Setter Property="Cursor" Value="/ICSharpCode.AvalonEdit;component/themes/RightArrow.cur" />
            </Style>

            <Style x:Shared="False" TargetType="{x:Type avalonedit:TextArea}">
                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                <Setter Property="SelectionBrush">
                    <Setter.Value>
                        <SolidColorBrush Opacity="0.7" Color="#3399FF" />
                    </Setter.Value>
                </Setter>
                <Setter Property="SelectionBorder">
                    <Setter.Value>
                        <Pen>
                            <Pen.Brush>
                                <SolidColorBrush Color="#3399FF" />
                            </Pen.Brush>
                        </Pen>
                    </Setter.Value>
                </Setter>
                <Setter Property="SelectionForeground">
                    <Setter.Value>
                        <SolidColorBrush Color="White" />
                    </Setter.Value>
                </Setter>

                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type avalonedit:TextArea}">
                            <DockPanel Focusable="False">
                                <ItemsControl
                                    Margin="0,0,10,0"
                                    Focusable="False"
                                    ItemsSource="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=LeftMargins}">
                                    <ItemsControl.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <StackPanel Orientation="Horizontal" />
                                        </ItemsPanelTemplate>
                                    </ItemsControl.ItemsPanel>
                                </ItemsControl>
                                <ContentPresenter
                                    Panel.ZIndex="-1"
                                    Content="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TextView}"
                                    Focusable="False" />
                            </DockPanel>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!--  Colors for DropDownButton and SplitButton  -->
            <SolidColorBrush x:Key="{ComponentResourceKey {x:Type avalonedit:DropDownButton}, ActiveBorder}" Color="#313338" />
            <SolidColorBrush x:Key="{ComponentResourceKey {x:Type avalonedit:DropDownButton}, ActiveBackground}" Color="Black" />

            <!--  Style and Template for DropDownButton  -->
            <Style TargetType="{x:Type avalonedit:DropDownButton}">
                <Setter Property="TextElement.Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
                <Setter Property="Padding" Value="2,2,2,2" />
                <Setter Property="Border.BorderThickness" Value="1,1,1,1" />
                <Setter Property="Panel.Background" Value="Transparent" />
                <Setter Property="Border.BorderBrush" Value="Transparent" />
                <Setter Property="HorizontalAlignment" Value="Center" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="HorizontalContentAlignment" Value="Center" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="avalonedit:DropDownButton">
                            <Border
                                x:Name="OuterBorder"
                                Background="{TemplateBinding Panel.Background}"
                                BorderBrush="#313338"
                                BorderThickness="1"
                                SnapsToDevicePixels="True">
                                <StackPanel Orientation="Horizontal">
                                    <ContentPresenter
                                        Margin="{TemplateBinding Control.Padding}"
                                        HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                        VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                                        Content="{TemplateBinding ContentControl.Content}"
                                        ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}"
                                        ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                                        SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                                    <Path
                                        Width="7"
                                        Height="3.5"
                                        Margin="0,2,2,2"
                                        Data="M0,0 L1,0 0.5,1 z"
                                        Fill="{TemplateBinding TextElement.Foreground}"
                                        Stretch="Fill" />
                                </StackPanel>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="UIElement.IsMouseOver" Value="True">
                                    <Setter TargetName="OuterBorder" Property="Border.BorderBrush" Value="#313338" />
                                    <Setter TargetName="OuterBorder" Property="Panel.Background" Value="Transparent" />
                                </Trigger>
                                <Trigger Property="UIElement.IsKeyboardFocused" Value="True">
                                    <Setter TargetName="OuterBorder" Property="Border.BorderBrush" Value="#313338" />
                                    <Setter TargetName="OuterBorder" Property="Panel.Background" Value="Transparent" />
                                </Trigger>
                                <Trigger Property="UIElement.IsEnabled" Value="False">
                                    <Setter Property="TextElement.Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                                </Trigger>
                                <Trigger Property="avalonedit:DropDownButton.IsDropDownContentOpen" Value="True">
                                    <Setter TargetName="OuterBorder" Property="Border.BorderBrush" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" />
                                    <Setter TargetName="OuterBorder" Property="Border.BorderThickness" Value="0,0,0,0" />
                                    <Setter TargetName="OuterBorder" Property="Border.Padding" Value="0,0,0,0" />
                                    <Setter TargetName="OuterBorder" Property="Panel.Background" Value="Transparent" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="search:SearchPanel">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type search:SearchPanel}">
                            <Border
                                Margin="0,0,10,0"
                                HorizontalAlignment="Right"
                                VerticalAlignment="Top"
                                Background="#313338"
                                BorderBrush="Black"
                                BorderThickness="1"
                                CornerRadius="3,3,3,3"
                                Cursor="Arrow">
                                <StackPanel Orientation="Horizontal">
                                    <TextBox
                                        x:Name="PART_searchTextBox"
                                        Width="200"
                                        Height="25"
                                        MinWidth="200"
                                        MinHeight="25"
                                        Margin="2,2,2,2"
                                        Padding="0"
                                        VerticalContentAlignment="Center"
                                        BorderBrush="Black"
                                        BorderThickness="1"
                                        Focusable="True"
                                        FontFamily="Verdana"
                                        Foreground="LightGray">
                                        <TextBox.Text>
                                            <Binding
                                                Path="SearchPattern"
                                                RelativeSource="{RelativeSource TemplatedParent}"
                                                UpdateSourceTrigger="PropertyChanged">
                                                <Binding.ValidationRules>
                                                    <ExceptionValidationRule />
                                                </Binding.ValidationRules>
                                            </Binding>
                                        </TextBox.Text>
                                    </TextBox>
                                    <search:DropDownButton
                                        Height="35"
                                        Margin="0"
                                        Padding="0"
                                        Background="#313338"
                                        FontFamily="Verdana"
                                        FontSize="12"
                                        Foreground="LightGray">
                                        <search:DropDownButton.DropDownContent>
                                            <Popup
                                                x:Name="PART_dropdownPopup"
                                                Width="135"
                                                Height="110"
                                                MinWidth="135"
                                                MinHeight="110"
                                                Margin="0,5,0,0"
                                                OpacityMask="#313338"
                                                Placement="Center"
                                                PopupAnimation="Fade"
                                                StaysOpen="False">
                                                <Border
                                                    Background="#313338"
                                                    BorderBrush="Black"
                                                    BorderThickness="1">
                                                    <StackPanel Orientation="Vertical">
                                                        <CheckBox
                                                            Width="20"
                                                            Height="20"
                                                            Margin="5,0,5,0"
                                                            HorizontalContentAlignment="Stretch"
                                                            VerticalContentAlignment="Stretch"
                                                            BorderBrush="LightGray"
                                                            Content="  Match Case"
                                                            Foreground="LightGray"
                                                            IsChecked="{Binding MatchCase, RelativeSource={RelativeSource TemplatedParent}}"
                                                            Style="{DynamicResource RoundCheckBoxStyle}" />
                                                        <CheckBox
                                                            Width="20"
                                                            Height="20"
                                                            Margin="5,0,5,0"
                                                            HorizontalContentAlignment="Stretch"
                                                            VerticalContentAlignment="Stretch"
                                                            BorderBrush="LightGray"
                                                            Content="  Match Whole"
                                                            Foreground="LightGray"
                                                            IsChecked="{Binding WholeWords, RelativeSource={RelativeSource TemplatedParent}}"
                                                            Style="{DynamicResource RoundCheckBoxStyle}" />
                                                        <CheckBox
                                                            Width="20"
                                                            Height="20"
                                                            Margin="5,0,5,0"
                                                            HorizontalContentAlignment="Stretch"
                                                            VerticalContentAlignment="Stretch"
                                                            BorderBrush="LightGray"
                                                            Content="  Use Regex"
                                                            Foreground="LightGray"
                                                            IsChecked="{Binding UseRegex, RelativeSource={RelativeSource TemplatedParent}}"
                                                            Style="{DynamicResource RoundCheckBoxStyle}" />
                                                    </StackPanel>
                                                </Border>
                                            </Popup>
                                        </search:DropDownButton.DropDownContent>
                                    </search:DropDownButton>
                                    <ui:Button
                                        Width="30"
                                        Height="30"
                                        MinWidth="30"
                                        MinHeight="30"
                                        Margin="2"
                                        Padding="0"
                                        Command="search:SearchCommands.FindPrevious"
                                        Foreground="LightGray">
                                        <ic:SymbolIcon
                                            IsFilled="False"
                                            Symbol="ArrowPrevious"
                                            ToolTipService.ToolTip="find previous" />
                                    </ui:Button>
                                    <ui:Button
                                        Width="30"
                                        Height="30"
                                        Margin="2"
                                        Padding="0"
                                        Command="search:SearchCommands.FindNext"
                                        Foreground="LightGray">
                                        <ic:SymbolIcon
                                            IsFilled="False"
                                            Symbol="ArrowNext"
                                            ToolTipService.ToolTip="find next" />
                                    </ui:Button>
                                    <ui:Button
                                        Width="40"
                                        Height="30"
                                        Margin="5,2,10,2"
                                        HorizontalAlignment="Right"
                                        VerticalAlignment="Top"
                                        HorizontalContentAlignment="Center"
                                        VerticalContentAlignment="Center"
                                        Command="search:SearchCommands.CloseSearchPanel"
                                        Focusable="False"
                                        Foreground="LightGray">
                                        <ic:SymbolIcon
                                            IsFilled="False"
                                            Symbol="ArrowExit"
                                            ToolTipService.ToolTip="close search" />
                                    </ui:Button>
                                </StackPanel>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <!--  end Avalon Edit  -->

            <!--  Fluent Window  -->
            <Style
                x:Key="FluentWindowStyle"
                BasedOn="{StaticResource {x:Type Window}}"
                TargetType="{x:Type controls:FluentWindow}">
                <Setter Property="Background">
                    <Setter.Value>
                        <SolidColorBrush Color="{DynamicResource ApplicationBackgroundColor}" />
                    </Setter.Value>
                </Setter>
                <Setter Property="Foreground">
                    <Setter.Value>
                        <SolidColorBrush Color="{DynamicResource TextFillColorPrimary}" />
                    </Setter.Value>
                </Setter>
                <Setter Property="BorderBrush" Value="Black" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="Height" Value="800" />
                <Setter Property="MinHeight" Value="400" />
                <Setter Property="Width" Value="1300" />
                <Setter Property="MinWidth" Value="600" />
                <Setter Property="Margin" Value="0" />
                <Setter Property="Padding" Value="0" />
                <Setter Property="FontSize" Value="{DynamicResource ControlContentThemeFontSize}" />
                <Setter Property="FontWeight" Value="Normal" />
                <Setter Property="UseLayoutRounding" Value="True" />
                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Setter Property="OverridesDefaultStyle" Value="True" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Window}">
                            <AdornerDecorator>
                                <controls:ClientAreaBorder
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}">
                                    <ContentPresenter x:Name="ContentPresenter" />
                                </controls:ClientAreaBorder>
                            </AdornerDecorator>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!--  TreeView Style  -->
            <Style x:Key="TreeViewStyle" TargetType="{x:Type TreeView}">
                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                <Setter Property="FontSize" Value="14" />
                <Setter Property="Foreground">
                    <Setter.Value>
                        <SolidColorBrush Color="{DynamicResource TextFillColorPrimary}" />
                    </Setter.Value>
                </Setter>
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="BorderBrush" Value="Transparent" />
                <Setter Property="Margin" Value="0" />
                <Setter Property="Padding" Value="0" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
                <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
                <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
                <Setter Property="OverridesDefaultStyle" Value="True" />
                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="TreeView">
                            <Border
                                Name="Border"
                                Padding="0"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="4">
                                <ScrollViewer
                                    Name="ItemsPresenterScrollViewer"
                                    CanContentScroll="False"
                                    HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                                    VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}">
                                    <ItemsPresenter Margin="{TemplateBinding Padding}" />
                                </ScrollViewer>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="VirtualizingPanel.IsVirtualizing" Value="True">
                                    <Setter TargetName="ItemsPresenterScrollViewer" Property="CanContentScroll" Value="True" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="VirtualizingPanel.IsVirtualizing" Value="True">
                        <Setter Property="ItemsPanel">
                            <Setter.Value>
                                <ItemsPanelTemplate>
                                    <VirtualizingStackPanel />
                                </ItemsPanelTemplate>
                            </Setter.Value>
                        </Setter>
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style BasedOn="{StaticResource TreeViewStyle}" TargetType="{x:Type TreeView}" />
            <!--  end TreeView  -->

            <Style x:Key="RoundCheckBoxStyle" TargetType="{x:Type CheckBox}">
                <!--  Universal WPF UI focus  -->
                <Setter Property="FocusVisualStyle" Value="{DynamicResource DefaultControlFocusVisualStyle}" />
                <!--  Universal WPF UI focus  -->
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Foreground">
                    <Setter.Value>
                        <SolidColorBrush Color="{DynamicResource TextFillColorPrimary}" />
                    </Setter.Value>
                </Setter>
                <Setter Property="BorderBrush" Value="Black" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="Padding" Value="0" />
                <Setter Property="Border.CornerRadius" Value="3" />
                <Setter Property="HorizontalAlignment" Value="Left" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="HorizontalContentAlignment" Value="Left" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="Cursor" Value="Hand" />
                <Setter Property="FontSize" Value="12" />
                <Setter Property="FontWeight" Value="Normal" />
                <Setter Property="KeyboardNavigation.IsTabStop" Value="True" />
                <Setter Property="Focusable" Value="True" />
                <Setter Property="MinWidth" Value="120" />
                <Setter Property="MinHeight" Value="32" />
                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Setter Property="OverridesDefaultStyle" Value="True" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type CheckBox}">
                            <BulletDecorator
                                HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                Background="Transparent">
                                <BulletDecorator.Bullet>
                                    <Border
                                        x:Name="ControlBorderIconPresenter"
                                        Width="20"
                                        Height="20"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Center"
                                        Background="{TemplateBinding Background}"
                                        CornerRadius="{TemplateBinding Border.CornerRadius}">
                                        <Border
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="{TemplateBinding BorderThickness}"
                                            CornerRadius="{TemplateBinding Border.CornerRadius}">
                                            <Grid>
                                                <controls:SymbolIcon
                                                    x:Name="ControlIcon"
                                                    Margin="0"
                                                    HorizontalAlignment="Center"
                                                    VerticalAlignment="Center"
                                                    FontSize="12"
                                                    FontWeight="Bold"
                                                    Symbol="Checkmark48"
                                                    Visibility="Collapsed">
                                                    <controls:SymbolIcon.Foreground>
                                                        <SolidColorBrush Color="Black" />
                                                    </controls:SymbolIcon.Foreground>
                                                </controls:SymbolIcon>
                                            </Grid>
                                        </Border>
                                    </Border>
                                </BulletDecorator.Bullet>
                                <ContentPresenter
                                    x:Name="ContentPresenter"
                                    Margin="0"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    RecognizesAccessKey="True" />
                            </BulletDecorator>
                            <ControlTemplate.Triggers>
                                <Trigger Property="Content" Value="{x:Null}">
                                    <Setter TargetName="ContentPresenter" Property="Margin" Value="0" />
                                    <Setter Property="MinWidth" Value="30" />
                                </Trigger>
                                <Trigger Property="Content" Value="">
                                    <Setter TargetName="ContentPresenter" Property="Margin" Value="0" />
                                    <Setter Property="MinWidth" Value="30" />
                                </Trigger>
                                <Trigger Property="IsChecked" Value="{x:Null}">
                                    <Setter TargetName="ControlIcon" Property="Symbol" Value="Subtract16" />
                                    <Setter TargetName="ControlIcon" Property="Visibility" Value="Visible" />
                                    <Setter TargetName="ControlBorderIconPresenter" Property="Background">
                                        <Setter.Value>
                                            <SolidColorBrush Opacity="1.0" Color="Black" />
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter TargetName="ControlIcon" Property="Visibility" Value="Visible" />
                                    <Setter TargetName="ControlBorderIconPresenter" Property="Background">
                                        <Setter.Value>
                                            <SolidColorBrush Opacity="1.0" Color="#666666" />
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsMouseOver" Value="True" />
                                        <Condition Property="IsChecked" Value="False" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="ControlBorderIconPresenter" Property="Background" Value="{DynamicResource ControlFillColorSecondaryBrush}" />
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsMouseOver" Value="True" />
                                        <Condition Property="IsChecked" Value="{x:Null}" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="ControlBorderIconPresenter" Property="Background">
                                        <Setter.Value>
                                            <SolidColorBrush Opacity="0.8" Color="DarkGray" />
                                        </Setter.Value>
                                    </Setter>
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsMouseOver" Value="True" />
                                        <Condition Property="IsChecked" Value="True" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="ControlBorderIconPresenter" Property="Background">
                                        <Setter.Value>
                                            <SolidColorBrush Opacity="0.8" Color="DarkGray" />
                                        </Setter.Value>
                                    </Setter>
                                </MultiTrigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="ControlBorderIconPresenter" Property="Background" Value="{DynamicResource ControlFillColorDisabledBrush}" />
                                    <Setter TargetName="ControlBorderIconPresenter" Property="BorderBrush" Value="{DynamicResource ControlStrokeColorDefaultBrush}" />
                                    <Setter TargetName="ControlIcon" Property="Foreground" Value="{DynamicResource TextFillColorDisabledBrush}" />
                                    <Setter Property="Foreground" Value="{DynamicResource TextFillColorDisabledBrush}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

        </ResourceDictionary>
    </ui:FluentWindow.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="40" />
            <RowDefinition Height="*" />
            <RowDefinition Height="30" />
        </Grid.RowDefinitions>

        <!--  Title Bar  -->
        <Grid Grid.Row="0" MouseLeftButtonDown="Grid_MouseLeftButtonDown">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="130" />
                <ColumnDefinition Width="268" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="130" />
                <!--  X Close Button  -->
            </Grid.ColumnDefinitions>
            <Rectangle Grid.Column="0" Fill="#1f2428" />
            <Rectangle Grid.Column="1" Fill="#1f2428" />
            <Rectangle Grid.Column="2" Fill="#1f2428" />
            <Rectangle Grid.Column="3" Fill="#1f2428" />

            <ui:TextBox
                x:Name="FilterBox"
                Grid.Column="0"
                Height="30"
                Margin="5,2,2,2"
                Padding="0,0,20,0"
                HorizontalContentAlignment="Right"
                VerticalContentAlignment="Center"
                Background="Transparent"
                BorderBrush="Black"
                BorderThickness="0"
                FontSize="14"
                KeyDown="FilterBox_KeyDown"
                OpacityMask="Black"
                PlaceholderText=".aoc"
                Style="{DynamicResource UiTextBoxStyle}"
                ToolTipService.ToolTip="filter by file extension (.pet)" />

            <CheckBox
                x:Name="RegexCheckBox"
                Grid.Column="0"
                Width="30"
                Height="30"
                MinHeight="30"
                Margin="10,0,0,0"
                Padding="0,0,0,0"
                HorizontalContentAlignment="Center"
                Background="#313338"
                Foreground="#DEDEDE"
                IsChecked="True"
                OpacityMask="Black"
                Style="{DynamicResource RoundCheckBoxStyle}"
                ToolTipService.ToolTip="use Regex (pet$)" />

            <ui:Button
                x:Name="FilterButton"
                Grid.Column="1"
                Width="50"
                Height="30"
                Margin="5,0,0,0"
                Padding="0"
                HorizontalAlignment="Left"
                VerticalAlignment="Center"
                Background="Transparent"
                BorderThickness="0"
                Click="FilterButton_Click"
                FontSize="24"
                Foreground="LightGray"
                ToolTipService.ToolTip="filter">
                <ic:SymbolIcon IsFilled="False" Symbol="Filter" />
            </ui:Button>

            <ui:TextBlock
                Grid.Column="1"
                Margin="50,0,0,0"
                HorizontalAlignment="Center"
                VerticalAlignment="Center">
                <Run
                    FontFamily="Verdana"
                    FontSize="13"
                    FontWeight="Black"
                    Foreground="LightGray">
                    VisualGGPK2
                </Run>
                <Label FontSize="11" Foreground="#2E7ED4">UI</Label>
            </ui:TextBlock>

            <StackPanel Grid.Column="2" Orientation="Horizontal">

                <ui:Button
                    x:Name="ButtonSave"
                    Width="60"
                    Height="30"
                    Margin="0,0,5,0"
                    Padding="0"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Center"
                    Background="#2B2D31"
                    BorderBrush="#2E7ED4"
                    Click="OnSaveTextClicked"
                    FontSize="20"
                    Foreground="LightGray"
                    ToolTipService.ToolTip="save">
                    <ic:SymbolIcon IsFilled="False" Symbol="Save" />
                </ui:Button>

                <Separator
                    Width="2"
                    Height="25"
                    Margin="0"
                    Background="Black"
                    BorderThickness="0" />

                <ui:Button
                    x:Name="ButtonSelectAll"
                    Width="40"
                    Height="30"
                    Margin="5,0,0,0"
                    Padding="0"
                    Background="Transparent"
                    BorderThickness="0"
                    Click="ButtonSelectAll_Click"
                    FontSize="20"
                    Foreground="LightGray"
                    ToolTipService.ToolTip="select all">
                    <ic:SymbolIcon IsFilled="False" Symbol="MultiselectLtr" />
                </ui:Button>

                <ui:Button
                    x:Name="ButtonCopy"
                    Width="40"
                    Height="30"
                    Margin="5,0,0,0"
                    Padding="0"
                    Background="Transparent"
                    BorderThickness="0"
                    Click="ButtonCopy_Click"
                    FontSize="20"
                    Foreground="LightGray"
                    ToolTipService.ToolTip="copy">
                    <ic:SymbolIcon IsFilled="False" Symbol="Copy" />
                </ui:Button>

                <ui:Button
                    x:Name="ButtonCut"
                    Width="40"
                    Height="30"
                    Margin="5,0,0,0"
                    Padding="0"
                    Background="Transparent"
                    BorderThickness="0"
                    Click="ButtonCut_Click"
                    FontSize="20"
                    Foreground="LightGray"
                    ToolTipService.ToolTip="cut">
                    <ic:SymbolIcon IsFilled="False" Symbol="Cut" />
                </ui:Button>

                <ui:Button
                    x:Name="ButtonPaste"
                    Width="40"
                    Height="30"
                    Margin="5,0,5,0"
                    Padding="0"
                    Background="Transparent"
                    BorderThickness="0"
                    Click="ButtonPaste_Click"
                    FontSize="20"
                    Foreground="LightGray"
                    ToolTipService.ToolTip="paste">
                    <ic:SymbolIcon IsFilled="False" Symbol="ClipboardPaste" />
                </ui:Button>

                <Separator
                    Width="2"
                    Height="25"
                    Margin="0,0,0,0"
                    Background="Black"
                    BorderThickness="0" />

                <ui:Button
                    x:Name="ButtonUndo"
                    Width="40"
                    Height="30"
                    Margin="5,0,0,0"
                    Padding="0"
                    Background="Transparent"
                    BorderThickness="0"
                    Click="ButtonUndo_Click"
                    FontSize="20"
                    Foreground="LightGray"
                    ToolTipService.ToolTip="undo">
                    <ic:SymbolIcon IsFilled="False" Symbol="ArrowUndo" />
                </ui:Button>

                <ui:Button
                    x:Name="ButtonRedo"
                    Width="40"
                    Height="30"
                    Margin="5,0,5,0"
                    Padding="0"
                    Background="Transparent"
                    BorderThickness="0"
                    Click="ButtonRedo_Click"
                    FontSize="20"
                    Foreground="LightGray"
                    ToolTipService.ToolTip="redo">
                    <ic:SymbolIcon IsFilled="False" Symbol="ArrowRedo" />
                </ui:Button>

                <Separator
                    Width="2"
                    Height="25"
                    Margin="0"
                    Background="Black"
                    BorderThickness="0" />

                <CheckBox
                    x:Name="TextWrap"
                    Width="30"
                    Height="30"
                    MinWidth="30"
                    MinHeight="30"
                    Margin="0"
                    HorizontalAlignment="Center"
                    HorizontalContentAlignment="Center"
                    IsChecked="{Binding ElementName=TextViewContent, Path=WordWrap}"
                    OpacityMask="Black"
                    Style="{DynamicResource RoundCheckBoxStyle}"
                    ToolTipService.ToolTip="text wrap" />

                <Separator
                    Width="2"
                    Height="25"
                    Margin="0"
                    Background="Black"
                    BorderThickness="0" />

                <ui:Button
                    x:Name="ButtonDelete"
                    Width="40"
                    Height="30"
                    Margin="5,0,0,0"
                    Padding="0"
                    Background="Transparent"
                    BorderThickness="0"
                    Click="ButtonDelete_Click"
                    FontSize="20"
                    Foreground="#E4FF0000"
                    ToolTipService.ToolTip="delete">
                    <ic:SymbolIcon IsFilled="False" Symbol="Delete" />
                </ui:Button>

                <ComboBox
                    x:Name="syntaxList"
                    Width="100"
                    Height="30"
                    Margin="5,0,0,0"
                    Background="Transparent"
                    BorderBrush="Black"
                    BorderThickness="0,0,0,1"
                    ToolTipService.ToolTip="syntax style selection" />
            </StackPanel>

            <ui:TitleBar
                Grid.Column="3"
                Width="130"
                Height="40"
                Foreground="LightGray" />
        </Grid>

        <!--  Content  -->
        <Grid
            Grid.Row="1"
            Focusable="True"
            MouseLeftButtonDown="Grid_MouseLeftButtonDown">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="50" />
                <ColumnDefinition Width="350" MinWidth="350" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Rectangle Grid.Column="0" Fill="#1f2428" />
            <Rectangle
                Grid.Column="1"
                Margin="0,0,0,-1"
                Fill="#24292E" />
            <Rectangle
                Grid.Column="2"
                Fill="#24292E"
                Focusable="True" />
            <GridSplitter
                Grid.Column="1"
                Width="5"
                Background="Black"
                Opacity="0.3" />

            <StackPanel Grid.Column="0" Orientation="Vertical">
                <ui:Button
                    x:Name="AllowGameOpen"
                    Width="40"
                    Height="35"
                    Margin="0,50,0,0"
                    Padding="0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Top"
                    HorizontalContentAlignment="Center"
                    Background="Transparent"
                    BorderBrush="Black"
                    BorderThickness="1"
                    Click="AllowGameOpen_Click"
                    FontSize="20"
                    Foreground="LightGray"
                    ToolTipService.ToolTip="allow game to be opened">
                    <ic:SymbolIcon IsFilled="False" Symbol="DesktopCheckmark" />
                </ui:Button>
                <ui:TextBlock
                    Margin="0,80,0,0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center">
                    <Run FontWeight="Black" Foreground="#FF2E7ED4">
                        open
                    </Run>
                </ui:TextBlock>
                <ui:Button
                    x:Name="Official"
                    Width="40"
                    Height="35"
                    Margin="0,10,0,0"
                    Padding="0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Background="Transparent"
                    BorderThickness="0"
                    Click="International_Click"
                    Content="O"
                    FontSize="20"
                    Foreground="LightGray"
                    ToolTipService.ToolTip="open Official" />
                <ui:Button
                    x:Name="Steam"
                    Width="40"
                    Height="35"
                    Margin="0,10,0,0"
                    Padding="0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Background="Transparent"
                    BorderThickness="0"
                    Click="Steam_Click"
                    Content="S"
                    FontSize="20"
                    Foreground="LightGray"
                    ToolTipService.ToolTip="open Steam" />
                <ui:Button
                    x:Name="Garena"
                    Width="40"
                    Height="35"
                    Margin="0,10,0,0"
                    Padding="0"
                    HorizontalAlignment="Center"
                    Background="Transparent"
                    BorderThickness="0"
                    Click="Garena_Click"
                    Content="G"
                    FontSize="20"
                    Foreground="LightGray"
                    ToolTipService.ToolTip="open Garena" />
                <ui:Button
                    x:Name="Tencent"
                    Width="40"
                    Height="35"
                    Margin="0,10,0,0"
                    Padding="0"
                    HorizontalAlignment="Center"
                    Background="Transparent"
                    BorderThickness="0"
                    Click="Tencent_Click"
                    Content="T"
                    FontSize="20"
                    Foreground="LightGray"
                    ToolTipService.ToolTip="open Tencent" />
                <ui:Button
                    x:Name="Epic"
                    Width="40"
                    Height="35"
                    Margin="0,10,0,0"
                    Padding="0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Background="Transparent"
                    BorderThickness="0"
                    Click="Epic_Click"
                    Content="E"
                    FontSize="20"
                    Foreground="LightGray"
                    ToolTipService.ToolTip="open Epic" />
                <ui:Button
                    x:Name="Restore"
                    Width="35"
                    Height="30"
                    Margin="0,100,0,0"
                    Padding="0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Background="Transparent"
                    BorderBrush="Black"
                    BorderThickness="1"
                    FontSize="24"
                    Foreground="LightGray"
                    ToolTipService.ToolTip="restore original ggpk index" Click="Restore_Click">
                    <ic:SymbolIcon IsFilled="False" Symbol="ArrowReset" />
                </ui:Button>
            </StackPanel>

            <StackPanel
                Grid.Column="0"
                Width="50"
                Height="70"
                VerticalAlignment="Bottom"
                Orientation="Vertical">
                <ui:TextBlock
                    Margin="0,0,0,5"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Bottom">
                    <Run Foreground="DarkGray">
                        v1.9.2
                    </Run>
                </ui:TextBlock>
                <ui:Image
                    Width="35"
                    Height="30"
                    Margin="0,0,0,0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Bottom"
                    CornerRadius="4"
                    RenderOptions.BitmapScalingMode="HighQuality"
                    Source="/silver_cube.png"
                    ToolTipService.ToolTip="VisualGGPK2 UI" />
            </StackPanel>

            <ui:TextBox
                x:Name="SearchBox"
                Grid.Column="1"
                Width="300"
                Height="30"
                MinWidth="300"
                MinHeight="30"
                Margin="2,2,6,0"
                Padding="5,-2,20,0"
                HorizontalAlignment="Center"
                VerticalAlignment="Top"
                HorizontalContentAlignment="Left"
                VerticalContentAlignment="Center"
                Background="#24292E"
                BorderBrush="#2B2D31"
                BorderThickness="1"
                Focusable="True"
                FontSize="14"
                Foreground="DarkGray"
                IconPlacement="Right"
                KeyDown="SearchBox_KeyDown"
                PlaceholderText="search..."
                Style="{DynamicResource UiTextBoxStyle}">
                <ui:TextBox.ContextMenu>
                    <ContextMenu Width="Auto" Margin="5">
                        <MenuItem Header="Copy" />
                        <MenuItem Header="Paste" />
                    </ContextMenu>
                </ui:TextBox.ContextMenu>
            </ui:TextBox>

            <TreeView
                x:Name="Tree"
                Grid.Column="1"
                Margin="0,40,6,0"
                AllowDrop="True"
                Background="{x:Null}"
                BorderThickness="1,0,0,0"
                Focusable="True"
                Foreground="LightGray"
                PreviewMouseDown="OnTreePreviewMouseDown"
                SelectedItemChanged="OnTreeSelectedChanged"
                Style="{DynamicResource TreeViewStyle}"
                TreeViewItem.Expanded="OnTreeExpanded"
                VirtualizingStackPanel.IsVirtualizing="True"
                VirtualizingStackPanel.VirtualizationMode="Recycling" />

            <avalonedit:TextEditor
                x:Name="TextViewContent"
                Grid.Column="2"
                Padding="10,10,0,0"
                HorizontalContentAlignment="Left"
                VerticalContentAlignment="Top"
                Background="{x:Null}"
                FontFamily="Verdana"
                FontSize="14"
                Foreground="LightGray"
                LineNumbersForeground="LightGray"
                ScrollViewer.CanContentScroll="True"
                ScrollViewer.HorizontalScrollBarVisibility="Auto"
                ScrollViewer.VerticalScrollBarVisibility="Auto"
                ShowLineNumbers="True"
                SnapsToDevicePixels="True"
                SyntaxHighlighting="C#"
                UseLayoutRounding="True"
                WordWrap="True">
                <avalonedit:TextEditor.ContextMenu>
                    <ContextMenu>
                        <MenuItem Command="Copy" />
                        <MenuItem Command="Paste" />
                        <MenuItem Command="Cut" />
                        <Separator />
                        <MenuItem Command="Undo" />
                        <MenuItem Command="Redo" />
                        <MenuItem Command="Delete" />
                    </ContextMenu>
                </avalonedit:TextEditor.ContextMenu>
            </avalonedit:TextEditor>
            <ui:TextBlock
                x:Name="tooltip"
                Grid.Column="2"
                Margin="0,10,10,0"
                HorizontalAlignment="Right"
                VerticalAlignment="Top">
                <Run
                    FontSize="14"
                    Foreground="Gray"
                    Text="press Ctrl+F to open search menu on file" />
            </ui:TextBlock>

            <Canvas
                x:Name="ImageView"
                Grid.Column="2"
                Margin="2"
                ClipToBounds="True"
                Focusable="True"
                Visibility="Hidden">
                <Image
                    x:Name="Image"
                    Canvas.Left="0"
                    Canvas.Top="0"
                    RenderOptions.BitmapScalingMode="HighQuality"
                    SnapsToDevicePixels="True"
                    Stretch="None" />
            </Canvas>

            <ui:TextBlock
                x:Name="copyright"
                Grid.Column="2"
                Margin="0,0,10,5"
                HorizontalAlignment="Right"
                VerticalAlignment="Bottom"
                FontSize="12"
                Opacity="0.8">
                <Run FontWeight="Black" Foreground="Gray">
                    copyright © 2020-2023 aianlinb
                </Run>
            </ui:TextBlock>

            <Grid
                x:Name="DatView"
                Grid.Column="2"
                Margin="0,5,0,0"
                Focusable="True"
                Visibility="Hidden">
                <Grid.RowDefinitions>
                    <RowDefinition Height="30" />
                    <RowDefinition MinHeight="30" />
                    <RowDefinition MinHeight="30" />
                </Grid.RowDefinitions>
                <StackPanel Orientation="Horizontal">
                    <CheckBox
                        x:Name="SchemaMin"
                        Height="35"
                        Margin="5,0,0,0"
                        Checked="OnSchemaMinChecked"
                        Content="Use schema"
                        IsChecked="True"
                        Style="{DynamicResource RoundCheckBoxStyle}"
                        ToolTipService.ToolTip="Use schema.min.json"
                        Unchecked="OnSchemaMinChecked" />
                    <Separator
                        Height="25"
                        Margin="5,0,0,0"
                        HorizontalAlignment="Left"
                        HorizontalContentAlignment="Center"
                        VerticalContentAlignment="Center"
                        BorderThickness="1,0,1,0" />
                    <Button
                        Width="80"
                        Height="30"
                        Margin="10,0,0,0"
                        HorizontalAlignment="Left"
                        Click="OnReloadClicked"
                        Content="Reload"
                        ToolTipService.ToolTip="Reload DatDefinitions" />
                    <Button
                        Width="80"
                        Height="30"
                        Margin="10,0,0,0"
                        HorizontalAlignment="Left"
                        Click="OnImportClicked"
                        Content="Import"
                        ToolTipService.ToolTip="Import from .csv" />
                    <Button
                        Width="80"
                        Height="30"
                        Margin="10,0,0,0"
                        HorizontalAlignment="Left"
                        Click="OnCSVClicked"
                        Content="Export"
                        ToolTipService.ToolTip="Export to .csv" />
                    <Separator
                        Height="25"
                        Margin="5,0,0,0"
                        HorizontalAlignment="Left"
                        HorizontalContentAlignment="Center"
                        VerticalContentAlignment="Center"
                        BorderThickness="1,0,1,0" />
                    <Button
                        Width="80"
                        Height="30"
                        Margin="10,0,0,0"
                        HorizontalAlignment="Left"
                        BorderBrush="#FF2E7ED4"
                        Click="OnSaveDatClicked"
                        Content="Save"
                        ToolTipService.ToolTip="save" />
                </StackPanel>

                <DataGrid
                    x:Name="DatTable"
                    Grid.Row="1"
                    Margin="0,5,0,2"
                    AutoGenerateColumns="False"
                    CanUserAddRows="False"
                    CanUserDeleteRows="False"
                    CanUserReorderColumns="False"
                    SelectionUnit="CellOrRowHeader" />
                <DataGrid
                    x:Name="DatReferenceDataTable"
                    Grid.Row="2"
                    AutoGenerateColumns="False"
                    CanUserAddRows="False"
                    CanUserDeleteRows="False"
                    CanUserReorderColumns="False"
                    SelectionUnit="CellOrRowHeader"
                    VirtualizingPanel.VirtualizationMode="Standard" />
                <GridSplitter
                    Grid.Row="1"
                    Height="5"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Bottom"
                    Background="#FF2B2D31" />
            </Grid>
        </Grid>

        <!--  Footer  -->
        <Grid Grid.Row="2" MouseLeftButtonDown="Grid_MouseLeftButtonDown">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width=".16*" />
                <ColumnDefinition Width=".15*" />
                <ColumnDefinition Width=".40*" />
                <ColumnDefinition Width=".30*" />
            </Grid.ColumnDefinitions>

            <Rectangle Grid.Column="0" Fill="#1f2428" />
            <Rectangle Grid.Column="1" Fill="#1f2428" />
            <Rectangle Grid.Column="2" Fill="#1f2428" />
            <Rectangle Grid.Column="3" Fill="#1f2428" />

            <ui:TextBox
                x:Name="TextBoxOffset"
                Grid.Column="0"
                Height="25"
                Margin="5,0,0,0"
                Padding="0"
                VerticalAlignment="Center"
                HorizontalContentAlignment="Center"
                VerticalContentAlignment="Center"
                Background="#1f2428"
                BorderBrush="#2B2D31"
                BorderThickness="1"
                FontSize="12"
                Foreground="LightGray"
                IsReadOnly="True"
                PlaceholderText="offsets"
                Style="{DynamicResource UiTextBoxStyle}"
                ToolTipService.ToolTip="offsets" />

            <ui:TextBox
                x:Name="TextBoxSize"
                Grid.Column="1"
                Height="25"
                Margin="5,0,0,0"
                Padding="0"
                VerticalAlignment="Center"
                HorizontalContentAlignment="Center"
                VerticalContentAlignment="Center"
                Background="#1f2428"
                BorderBrush="#2B2D31"
                BorderThickness="1"
                FontSize="12"
                Foreground="LightGray"
                IsReadOnly="True"
                PlaceholderText="size"
                Style="{DynamicResource UiTextBoxStyle}"
                ToolTipService.ToolTip="size" />

            <ui:TextBox
                x:Name="TextBoxHash"
                Grid.Column="2"
                Height="25"
                Margin="5,0,0,0"
                Padding="0"
                VerticalAlignment="Center"
                HorizontalContentAlignment="Center"
                VerticalContentAlignment="Center"
                Background="#1f2428"
                BorderBrush="#2B2D31"
                BorderThickness="1"
                FontSize="12"
                Foreground="LightGray"
                IsReadOnly="True"
                PlaceholderText="hash"
                Style="{DynamicResource UiTextBoxStyle}"
                ToolTipService.ToolTip="hash" />

            <ui:TextBox
                x:Name="TextBoxBundle"
                Grid.Column="3"
                Height="25"
                Margin="5,0,5,0"
                Padding="0"
                VerticalAlignment="Center"
                HorizontalContentAlignment="Center"
                VerticalContentAlignment="Center"
                Background="#1f2428"
                BorderBrush="#2B2D31"
                BorderThickness="1"
                FontSize="12"
                Foreground="LightGray"
                IsReadOnly="True"
                PlaceholderText="bundle"
                Style="{DynamicResource UiTextBoxStyle}"
                ToolTipService.ToolTip="bundle" />
        </Grid>
        <ui:ProgressRing
            x:Name="pRing"
            Grid.Row="1"
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            Foreground="Black"
            IsIndeterminate="False"
            Visibility="Hidden" />
    </Grid>
</ui:FluentWindow>